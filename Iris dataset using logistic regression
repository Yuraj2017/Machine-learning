import sklearn
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn import linear_model


iris = datasets.load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
labels = iris.target

df['labels'] = labels
print(df.columns)

sns.catplot(x= 'labels', y = 'sepal length (cm)', data=df )

training, testing = train_test_split(df, test_size = 0.3, random_state = 101)
input_labels = ['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)',
       'petal width (cm)']
output_label = 'labels'
x_train = training[input_labels]
y_train = training[output_label]

x_test = testing[input_labels]
y_test = testing[output_label]

logistic = linear_model.LogisticRegression()

logistic.fit(x_train, y_train)
y_predicted = logistic.predict(x_test)

label_name = iris.target_names

list1 = []
for values in y_predicted:
  if values == 0:
    values = label_name[0]
    list1.append(values)
  elif values == 1:
    values = label_name[1]
    list1.append(values)
  else:
    values = label_name[2]
    list1.append(values)

print(list1)

print(y_predicted)



acc = metrics.accuracy_score(y_test, y_predicted)

print(acc)
